@model Expense
@inject IExpenseCategoryService Categories
@{
    ViewData["Title"] = "Add Expenses";
}

<h1>Add Expenses</h1>

<span>@{var str = ViewBag.Added ?? "";} @str</span><br/>
<h3><span class="text-danger">@{var exc = ViewBag.BudgetMessage ?? "";} @exc</span></h3>
@if (!(ViewBag.IsBudgetSet??true))
{
<p class="text-danger"><strong>
    Your have not created a Budget for @Model.DateOfExpense.ToString("MMMM") for this Category<br />
    Consider setting a Budget <a asp-action="CreateBudget" asp-controller="Budget"
                                 asp-route-month="@Model.DateOfExpense.ToString("MMMM")" asp-route-year="@Model.DateOfExpense.Year"
                                 asp-route-categoryId="@Model.ExpenseCategoryId">here</a>
</strong></p>
}
<hr />

<div class="row">
    <div class="col-md-4">
         @{var dateValue = Model.DateOfExpense.ToString() == new DateTime().ToString() ? DateTime.Now : Model.DateOfExpense; }

        <form asp-action="AddExpenses" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <input asp-for="Id" type="hidden" class="form-control" />
            </div>

            <div class="form-group">
                <input asp-for="AppUserId" type="hidden" class="form-control" />
            </div>

            <div class="form-group">
                <label asp-for="NameOfExpense" class="control-label">Name Of Expense*</label>
                <input asp-for="NameOfExpense" required placeholder="What did you spend this amount on?" class="form-control" />
                <span asp-validation-for="NameOfExpense" class="text-danger"></span>
            </div>
            <br />

            <div class="form-group">
                <label asp-for="CostOfExpense" class="control-label">Cost Of Expense*</label>
                <input asp-for="CostOfExpense" required placeholder="How much was spent?" class="form-control" />
                <span asp-validation-for="CostOfExpense" class="text-danger"></span>
            </div>
            <br />

            <div class="form-group">
                <label asp-for="ExpenseCategoryId" class="control-label">Expense Category*</label>
                @Html.DropDownList("ExpenseCategoryId", new SelectList(Categories.GetCategories(Model.AppUserId), "Id", "Name", Model.ExpenseCategoryId), "select  category", new { id = "ExpenseCategoryId", @class = "validate-select form-control" })
                <span asp-validation-for="ExpenseCategoryId" class="text-danger"></span>
            </div>
            <br />

            <div class="form-group">
                <label asp-for="DateOfExpense" class="control-label">Date Of Expense*</label>
                <input id="dateField" asp-for="DateOfExpense" required type="date" onchange="checkDate(this);" class="form-control" value="@dateValue"
                   onclick="convertDate(@dateValue);"          />
                <span asp-validation-for="DateOfExpense" class="text-danger"></span>
            </div>
            <br />

            <div class="form-group">
                <label asp-for="MoreDescription" class="control-label">More Description</label>
                <textarea name="MoreDescription" placeholder="Write here anything else about this expense" class="form-control"></textarea>
                <span asp-validation-for="MoreDescription" class="text-danger"></span>
            </div>
            <br />

            <div class="form-group">
                <a asp-action="Index" class="btn btn-primary">Cancel</a>
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
            
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a> |
    <a asp-controller="ExpensesCategory" asp-action="AddCategory">Add New Category</a>
</div>


<script>
    
    const log = document.getElementById('dateField');
    var convertedDate = new Date(Date.parse(log.defaultValue));
    var dd = convertedDate.getDate();
    var mm = convertedDate.getMonth() + 1; //January is 0!
    var yyyy = convertedDate.getFullYear();
    if (dd < 10) {
        dd = '0' + dd
    }
    if (mm < 10) {
        mm = '0' + mm
    }
    convertedDate = yyyy + '-' + mm + '-' + dd;
    log.defaultValue = convertedDate

    function checkDate(dateField) {
        var dateField = dateField.id;
        var today = new Date();
        var dd = today.getDate();
        var mm = today.getMonth() + 1; //January is 0!
        var yyyy = today.getFullYear();
        if (dd < 10) {
            dd = '0' + dd
        }
        if (mm < 10) {
            mm = '0' + mm
        }

        today = yyyy + '-' + mm + '-' + dd;
        document.getElementById(dateField).setAttribute("max", today);
    }

    
</script>